use svg_exploit_checker::svg_checker::{SvgChecker, SvgCheckError, Config};
use tempfile;

#[tokio::test]
async fn test_script_tag_detection() {
    let svg_content = r#"
    <svg xmlns="http://www.w3.org/2000/svg" width="100" height="100">
        <script>alert('XSS');</script>
    </svg>"#;

    let temp_dir = tempfile::tempdir().unwrap();
    let file_path = temp_dir.path().join("test.svg");
    std::fs::write(&file_path, svg_content).unwrap();

    let config = Config::default();
    let checker = SvgChecker::new(config);
    let result = checker.check_file(file_path).await;

    assert!(matches!(result, Err(SvgCheckError::ExploitDetected(msg)) if msg.contains("Script tag found")));
}

#[tokio::test]
async fn test_safe_svg() {
    let svg_content = r#"
    <svg xmlns="http://www.w3.org/2000/svg" width="100" height="100">
        <rect width="100" height="100" fill="blue" />
    </svg>"#;

    let temp_dir = tempfile::tempdir().unwrap();
    let file_path = temp_dir.path().join("safe.svg");
    std::fs::write(&file_path, svg_content).unwrap();

    let config = Config::default();
    let checker = SvgChecker::new(config);
    let result = checker.check_file(file_path).await;

    assert!(result.is_ok());
}
